"""Change to ORM

Revision ID: 54ffc39a1da3
Revises: 
Create Date: 2020-11-20 10:45:03.376252

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '54ffc39a1da3'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(None, 'project_plugin_relation', ['git_repository_id'])
    op.create_unique_constraint(None, 'project_plugin_relation', ['plan_project_id'])
    op.drop_constraint('role', 'project_user_role', type_='foreignkey')
    op.alter_column('checkmarx', 'scan_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_foreign_key(None, 'checkmarx', 'project_plugin_relation', ['repo_id'], ['git_repository_id'], ondelete='CASCADE')
    op.alter_column('flows', 'type_id',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='["Given","When","Then","But","And"]',
               existing_nullable=True)
    op.create_foreign_key(None, 'flows', 'projects', ['project_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'flows', 'requirements', ['requirement_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'parameters', 'projects', ['project_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'parameters', 'projects', ['project_id'], ['id'], ondelete='CASCADE')
    op.alter_column('pipeline_phase', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('pipeline_software', 'is_closed',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('false'))
    op.drop_constraint('phase_id', 'pipeline_software', type_='foreignkey')
    op.drop_constraint('software_id', 'pipeline_software_config', type_='foreignkey')
    op.drop_constraint('project_Id', 'pipeline_software_config', type_='foreignkey')
    op.create_foreign_key(None, 'pipeline_software_config', 'projects', ['project_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'pipeline_software_config', 'pipeline_software', ['software_id'], ['id'], ondelete='CASCADE')
    op.add_column('project_plugin_relation', sa.Column('id', sa.Integer(), nullable=False))
    op.alter_column('project_plugin_relation', 'project_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_foreign_key(None, 'project_plugin_relation', 'projects', ['project_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('user', 'project_user_role', type_='foreignkey')
    op.create_foreign_key(None, 'project_user_role', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'project_user_role', 'projects', ['project_id'], ['id'], ondelete='CASCADE')
    op.alter_column('projects', 'disabled',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('false'))
    op.alter_column('requirements', 'disabled',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('false'))
    op.create_foreign_key(None, 'requirements', 'projects', ['project_id'], ['id'], ondelete='CASCADE')
    op.alter_column('test_cases', 'disabled',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('false'))
    op.create_foreign_key(None, 'test_cases', 'projects', ['project_id'], ['id'], ondelete='CASCADE')
    op.alter_column('test_items', 'disabled',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('false'))
    op.alter_column('test_items', 'is_passed',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('true'))
    op.create_foreign_key(None, 'test_items', 'projects', ['project_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'test_items', 'test_cases', ['test_case_id'], ['id'], ondelete='CASCADE')
    op.alter_column('test_results', 'fail',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='faiue test',
               existing_nullable=True)
    op.create_foreign_key(None, 'test_results', 'projects', ['project_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'test_values', 'test_cases', ['test_case_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'test_values', 'test_items', ['test_item_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'test_values', 'projects', ['project_id'], ['id'], ondelete='CASCADE')
    op.drop_index('user_id_idx', table_name='user')
    op.drop_constraint('user_login_key', 'user', type_='unique')
    op.drop_constraint('user', 'user_plugin_relation', type_='foreignkey')
    op.create_foreign_key(None, 'user_plugin_relation', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user_plugin_relation', type_='foreignkey')
    op.create_foreign_key('user', 'user_plugin_relation', 'user', ['user_id'], ['id'])
    op.create_unique_constraint('user_login_key', 'user', ['login'])
    op.create_index('user_id_idx', 'user', ['id'], unique=False)
    op.drop_constraint(None, 'test_values', type_='foreignkey')
    op.drop_constraint(None, 'test_values', type_='foreignkey')
    op.drop_constraint(None, 'test_values', type_='foreignkey')
    op.drop_constraint(None, 'test_results', type_='foreignkey')
    op.alter_column('test_results', 'fail',
               existing_type=sa.INTEGER(),
               comment='faiue test',
               existing_nullable=True)
    op.drop_constraint(None, 'test_items', type_='foreignkey')
    op.drop_constraint(None, 'test_items', type_='foreignkey')
    op.alter_column('test_items', 'is_passed',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('true'))
    op.alter_column('test_items', 'disabled',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('false'))
    op.drop_constraint(None, 'test_cases', type_='foreignkey')
    op.alter_column('test_cases', 'disabled',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('false'))
    op.drop_constraint(None, 'requirements', type_='foreignkey')
    op.alter_column('requirements', 'disabled',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('false'))
    op.alter_column('projects', 'disabled',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('false'))
    op.drop_constraint(None, 'project_user_role', type_='foreignkey')
    op.drop_constraint(None, 'project_user_role', type_='foreignkey')
    op.create_foreign_key('role', 'project_user_role', 'roles', ['role_id'], ['id'])
    op.create_foreign_key('user', 'project_user_role', 'user', ['user_id'], ['id'])
    op.drop_constraint(None, 'project_plugin_relation', type_='foreignkey')
    op.drop_constraint(None, 'project_plugin_relation', type_='unique')
    op.drop_constraint(None, 'project_plugin_relation', type_='unique')
    op.alter_column('project_plugin_relation', 'project_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('project_plugin_relation', 'id')
    op.drop_constraint(None, 'pipeline_software_config', type_='foreignkey')
    op.drop_constraint(None, 'pipeline_software_config', type_='foreignkey')
    op.create_foreign_key('project_Id', 'pipeline_software_config', 'projects', ['project_id'], ['id'])
    op.create_foreign_key('software_id', 'pipeline_software_config', 'pipeline_software', ['software_id'], ['id'])
    op.create_foreign_key('phase_id', 'pipeline_software', 'pipeline_phase', ['phase_id'], ['id'])
    op.alter_column('pipeline_software', 'is_closed',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('false'))
    op.alter_column('pipeline_phase', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_constraint(None, 'parameters', type_='foreignkey')
    op.drop_constraint(None, 'flows', type_='foreignkey')
    op.drop_constraint(None, 'flows', type_='foreignkey')
    op.alter_column('flows', 'type_id',
               existing_type=sa.INTEGER(),
               comment='["Given","When","Then","But","And"]',
               existing_nullable=True)
    op.drop_constraint(None, 'checkmarx', type_='foreignkey')
    op.alter_column('checkmarx', 'scan_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.create_table('group_parent_child',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('group_parent_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('group_child_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['group_child_id'], ['group.id'], name='group_child'),
    sa.ForeignKeyConstraint(['group_parent_id'], ['group.id'], name='group_parent'),
    sa.PrimaryKeyConstraint('id', name='group_parent_child_pkey')
    )
    op.create_table('group',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('group_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=45), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('create_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('update_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='group_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('groups_has_users',
    sa.Column('group_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], name='group_id'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='user')
    )
    op.create_table('roles_plugin_relation',
    sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('plan_role_id', sa.INTEGER(), autoincrement=False, nullable=False)
    )
    op.create_table('roles',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='roles_pkey')
    )
    op.create_table('http_method',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('type', sa.VARCHAR(length=50), autoincrement=False, nullable=True)
    )
    op.create_table('test_cases_type',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True)
    )
    op.create_table('parameter_types',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('type', sa.VARCHAR(length=30), autoincrement=False, nullable=True)
    )
    op.create_table('files',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(length=45), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=45), autoincrement=False, nullable=True),
    sa.Column('state', sa.VARCHAR(length=45), autoincrement=False, nullable=True),
    sa.Column('file', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('editor_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('create_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('upload_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('project_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('issue_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('version_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name='project_id'),
    sa.PrimaryKeyConstraint('id', name='files_pkey')
    )
    op.drop_table('files')
    op.drop_table('parameter_types')
    op.drop_table('test_cases_type')
    op.drop_table('http_method')
    op.drop_table('roles')
    op.drop_table('roles_plugin_relation')
    op.drop_table('groups_has_users')
    op.drop_table('group_parent_child')
    op.drop_table('group')
    # ### end Alembic commands ###
