---
openapi: 3.0.0
info:
  title: DevOps Front End API For RD
  description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/)
    or HTML.
  version: DevOps Dev Version V1.0
servers:
- url: http://10.50.1.56:31850
  description: API server for Front End
tags:
- name: project
  description: DevOps project
- name: issue
  description: Redmine issues
- name: pipeline
  description: CICD pipeline ID
- name: user
  description: user account information
- name: repository
  description: GitLab Project
paths:
  /user/login:
    description: '登入頁面;none'
    post:
      tags:
      - user
      summary: 使用者登入
      operationId: userLogin
      requestBody:
        description: User Login Method
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example:  admin
                password:
                  type: string
                  example:  password
              required:
              - username
              - password
      responses:
        '200':
          description: successful operation
          headers:
            X-Rate-Limit:
              schema:
                type: integer
              description: calls per hour allowed by the user
            X-Expires-After:
              schema:
                type: integer
              description: date in UTC when token expires
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    $ref: '#/components/schemas/SuccessMessage'
                  data:
                    $ref: '#/components/schemas/JWTToken'
        '400':
          $ref: '#/components/response/errorResponse'
  /user/forgetPassword:
    description: '忘記密碼頁面;none'
    post:
      tags:
      - user
      summary: 使用者忘記帳號密碼
      operationId: userForgetPassword
      requestBody:
        description: User forget password
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                mail:
                  type: string
                user_id:
                  type: string
              required:
              - mail
              - user_name
      responses:
        '200':
          description: Success Reset Password
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    $ref: '#/components/schemas/SuccessMessage'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '405':
          $ref: '#/components/responses/InvalidInput'
        '400':
          $ref: '#/components/responses/errorResponse'
  /user/{user_id}:
    description: '4.1_用戶管理'
    get:
      summary: 取得用戶資訊
      operationId: getUserInformation
      tags:
      - user
      security:
        - bearerAuth: ['']
      parameters:
      - name: user_id
        in: path
        required: true
        description: User PK
        schema:
          type: integer
          example: 1
          format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    $ref: "#/components/schemas/SuccessMessage"
                  data:
                    $ref: "#/components/schemas/UserInfo"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '405':
          $ref: '#/components/responses/InvalidInput'
        '400':
          $ref: '#/components/responses/errorResponse'
    put:
      summary: 修改用戶資訊, 用戶密碼變更
      tags:
      - user
      security:
        - bearerAuth: []
      parameters:
      - name: user_id
        in: path
        required: true
        description: User PK
        schema:
          $ref: "#/components/schemas/UpdateUser"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    $ref: "#/components/schemas/SuccessMessage"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '405':
          $ref: '#/components/responses/InvalidInput'
        '400':
          $ref: '#/components/responses/errorResponse'
  /project/rd/{user_id}:
    description: '3_專案清單'
    get:
      summary: 取得使用者目前專案資訊
      tags:
      - project
      security:
        - bearerAuth: ['']
      description: 取得使用者目前專案資訊
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Id"
      responses:
        '200':
          description: A JSON array of project object
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    $ref: "#/components/schemas/SuccessMessage"
                  data:
                    $ref: "#/components/schemas/ProjectList"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '405':
          $ref: '#/components/responses/InvalidInput'
        '400':
          $ref: '#/components/responses/errorResponse'
  /pipelines/rd/{repository_id}/pipelines_info:
    description: "3.3_工具軟體設定"
    get:
      summary: "3.3_工具軟體設定"
      tags:
        - pipelines
      security:
        - bearerAuth: ['']
      description: '取得專案執行pipelines的設定值'
      parameters:
      - name: repository_id
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Id"
      responses:
        '200':
          description: A JSON array of issues id
          content:
            application/json:
              schema:
                type: object 
                properties:
                  message:
                    $ref: "#/components/schemas/SuccessMessage"
                  data:
                    type: object
                    properties:
                      static_analisys:
                        type: array
                        items:
                          $ref: "#/components/schemas/Software"
                      unit_Test:
                        type: array
                        items:
                          $ref: "#/components/schemas/Software"
                      integeration test:
                        type: array
                        items:
                          $ref: "#/components/schemas/Software"
                      monitor:
                        type: array
                        items:
                          $ref: "#/components/schemas/Software"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '405':
          $ref: '#/components/responses/InvalidInput'
        '400':
          $ref: '#/components/responses/errorResponse'
  /pipelines/rd/{repository_id}/pipelines_exec:
    description: '3.4_CICD紀錄清單'
    get:
      summary: '3.4_CICD紀錄清單'
      tags:
      - pipelines
      security:
        - bearerAuth: ['']
      description: '取得專案執行pipelines的列表'
      parameters:
      - name: repository_id
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Id"
      responses:
        '200':
          description: A JSON array of issupipelines Info
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    $ref: "#/components/schemas/ExampleMessage"
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/PipelinesExecInfo"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '405':
          $ref: '#/components/responses/InvalidInput'
        '400':
          $ref: '#/components/responses/errorResponse'
  /pipelines/rd/logs:
    description: '3.4.1_CICD詳細記錄'
    get:
      summary: '3.4.1_CICD詳細記錄' 
      tags:
      - pipelines
      security:
        - bearerAuth: ['']
      description: '取得專案pipelines的執行LOG檔案'
      parameters:
        - in: query
          name: project_id
          required: true
          schema: 
            type: integer
        - in: query
          name: pipelines_exec_run
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: log infromation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    $ref: "#/components/schemas/ExampleMessage"
                  data:  
                    $ref: "#/components/schemas/PipeLinesExecLog"
        '400':
          $ref: '#/components/responses/errorResponse'
  /pipelines/software:
    description: '目前pipieline 情境可用軟體'
    get:
      summary: '目前pipieline 可用軟體' 
      tags:
      - pipelines
      security:
        - bearerAuth: ['']
      description: '取得專案pipelines的執行LOG檔案'
      responses:
        '200':
          description: log infromation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    $ref: "#/components/schemas/ExampleMessage"
                  data:
                    type: array
                    items:  
                      $ref: "#/components/schemas/PipelineSoftware"
        '400':
          $ref: '#/components/responses/errorResponse'
  /pipelines/<repository_id>/branch/<branch_name>/generate_ci_yaml:
    get:
      summary: '目前pipieline yaml file' 
      tags:
      - pipelines
      security:
        - bearerAuth: ['']
      description: '取得專案pipelines的執行file 的檔案'
      parameters:
      - name: issue_id
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Id"
      responses:
        '200':
          description: log infromation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    $ref: "#/components/schemas/ExampleMessage"
                  data:
                    type: array
                    items:  
                      $ref: "#/components/schemas/PipielineYamlInfo"
        '400':
          $ref: '#/components/responses/errorResponse'
    post:
      summary: '新增 pipieline yaml file' 
      tags:
      - pipelines
      security:
        - bearerAuth: ['']
      description: '更新專案pipelines的執行file 的檔案'
      requestBody:
        description: 新增pipelines 資訊
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
      responses:
        '200':
          description: log infromation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    $ref: "#/components/schemas/ExampleMessage"
                  data:
                    type: array
                    items:  
                      $ref: "#/components/schemas/PipielineYamlInfo"
        '400':
          $ref: '#/components/responses/errorResponse'
    put:
      summary: '更新 pipieline yaml file' 
      tags:
      - pipelines
      security:
        - bearerAuth: ['']
      description: '取得專案pipelines的執行file 的檔案'
      responses:
        '200':
          description: log infromation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    $ref: "#/components/schemas/ExampleMessage"
                  data:
                    type: array
                    items:  
                      $ref: "#/components/schemas/PipielineYamlInfo"
    
    
  /issues/rd/{issue_id}:
    description: '2.1 工作詳細內容 2.1.2 更新工作內容'
    get:
      summary: '2.1 工作詳細內容'
      tags:
      - issue
      security:
        - bearerAuth: ['']
      description: '取得Issues內的資訊'
      parameters:
      - name: issue_id
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Id"
      responses:
        '200':
          description: A JSON array of issues info
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    $ref: "#/components/schemas/SuccessMessage"
                  data:
                    $ref: "#/components/schemas/IssueInfo"
        '400':
          $ref: '#/components/responses/errorResponse'
    put:
      summary: 2.1.2 更新工作內容
      tags:
      - issue
      security:
        - bearerAuth: ['']
      description: '更新ssues內的資訊'
      parameters:
      - name: issue_id
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Id"
      requestBody:
        description: 更新Issues內的資訊
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RDUpdateIssue'
      responses:
        '200':
          description: A JSON object info
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    $ref: "#/components/schemas/ExampleMessage"
        '400':
          $ref: '#/components/responses/errorResponse'
  /issues/rd/{issue_id}/function:
    summary: 2.1.3_議題_功能列表
    get:
      summary: 取得Issues內的功能(API)的ID
      tags:
      - issue
      security:
        - bearerAuth: ['']
      description: issues內所開發的功能.
      parameters:
      - name: issue_id
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Id"
      responses:
        '200':
          description: A JSON Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    $ref: "#/components/schemas/ExampleMessage"
                  data:
                    type: array
                    $ref: "#/components/schemas/FuntionList"
      deprecated: true
  /funtion/rd/{funtion_id}:
    get:
      summary: 2.1.4_設定API
      tags:
      - issue
      security:
        - bearerAuth: ['']
      description: '取得Issues內功能資訊'
      parameters:
      - name: funtion_id
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Id"
      responses:
        '200':
          description: A JSON Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    $ref: "#/components/schemas/ExampleMessage"
                  data:                
                    $ref: "#/components/schemas/Function"
      deprecated: true
    put:
      summary: 2.1.4_設定API
      tags:
      - issue
      security:
        - bearerAuth: ['']
      description: '設定API'
      parameters:
      - name: funtion_id
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Id"
      responses:
        '200':
          description: A JSON Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    $ref: "#/components/schemas/ExampleMessage"
                  data:                
                    $ref: "#/components/schemas/Function"
      deprecated: true
    delete:
      summary: 刪除function
      tags:
      - issue
      security:
        - bearerAuth: ['']
      description: delete Function
      parameters:
      - name: funtion_id
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Id"
      responses:
        '200':
          description: delete successful
      deprecated: true
  /issues/rd/{issue_id}/{funtion_id}/parameters:
    get:
      summary: 2.1.4_設定API
      tags:
      - issue
      security:
        - bearerAuth: ['']
      description: 2.1.4內API所使用的參數列表
      parameters:
      - name: issue_id
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Id"
      - name: funtion_id
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Id"
      responses:
        '200':
          description: A JSON array of parameters list
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    $ref: '#/components/schemas/ExampleMessage'
                  data:
                    $ref: "#/components/schemas/Id"
      deprecated: true
  /parameters/rd/{parameters_id}:
    get:
      summary: '2.1.4.1_設定參數'
      tags:
      - issue
      security:
        - bearerAuth: ['']
      description: 2.1.4.1_設定參數
      parameters:
      - name: parameters_id
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Id"
      responses:
        '200':
          description: A JSON array of Issues id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Parameters"
      deprecated: true
    put:
      summary: '2.1.4.1_設定參數'
      tags:
      - issue
      security:
        - bearerAuth: ['']
      description: 2.1.4.1_設定參數
      parameters:
      - name: parameters_id
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Id"
      responses:
        '200':
          description: A JSON array of Issues id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Parameters"
      deprecated: true
    delete:
      summary: 2.1.4.1_設定參數
      tags:
      - issue
      security:
        - bearerAuth: ['']
      description: 2.1.4.1_設定參數
      parameters:
      - name: parameters_id
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Id"
      responses:
        '200':
          description: delete successful
      deprecated: true
  /issues_status:
    get:
      summary: 取得目前議題可使用狀態(For 所有議題)
      tags:
      - issue
      security:
        - bearerAuth: ['']
      description: 取得議題可使用的狀態列表 如 已被分配等
      responses:
        '200':
          description: A JSON array of Issues Status Information
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/IssuesStatus"
  /issues_priority:
    get:
      summary: 取得目前議題可使用優先級別(For 所有議題)
      tags:
      - issue
      security:
        - bearerAuth: ['']
      description: 取得目前議題可使用優先級別(如 急 等)
      responses:
        '200':
          description: A JSON array of Issues Information
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/IssuesPriority"
  /issuses_tracker:
    get:
      summary: 取得目前議題可使用狀態(For 所有議題)
      tags:
      - issue
      security:
        - bearerAuth: ['']
      description: 取得目前議題可使用狀態 如 Feature 
      responses:
        '200':
          description: A JSON array of Issues Information
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/IssuesTrackers"
  /issues_by_user/rd/{user_id}:
    description: '2_工作清單'
    get:
      summary: '2_工作清單'
      tags:
      - issue
      security:
        - bearerAuth: ['']
      description: 取得使用者所擁有Issues的資訊
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Id"
      responses:
        '200':
          description: A JSON array of Issues Information
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    $ref: '#/components/schemas/ExampleMessage'
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/IssuesList"
  /repositories/rd/{user_id}:
    description: '3 程式碼清單(none)'
    get:
      summary: 3 程式碼清單
      tags:
      - repository
      security:
        - bearerAuth: ['']
      description: 取得使用者目前程式碼資訊
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Id"
      responses:
        '200':
          description: A JSON array of project object
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProjectList"
      deprecated: true
  /repositories/{repository_id}:
    description: '3.2 程式碼蓋覽圖 (none)'
    get:
      summary: 3.2 程式碼蓋覽圖 (none)
      tags:
      - repository
      security:
        - bearerAuth: ['']
      description: '3.2 程式碼蓋覽圖 (none)'
      parameters:
      - name: repository_id
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/Id"
      responses:
        '200':
          description: A JSON array of issues id
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    $ref: '#/components/schemas/SuccessMessage'
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/RepositorySourceTree"
  /repositories/rd/{repository_id}/merge_branches:
    description: '3.2.8 合併分支'
    post:
      summary: '3.2.8 合併分支'
      tags:
      - repository
      security:
        - bearerAuth: ['']
      description: 3.2.8 合併分支
      parameters:
      - name: repository_id
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Id"
      requestBody:
        description: 建立Tags
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                schemas:
                  $ref: "#/components/schemas/MergeBranchs"
      responses:
        '200':
          description: A JSON array of issues id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tag"   
  /repositories/rd/{repository_id}/tags:
    get:
      summary: 取得專案內Repository的Tags的ID
      tags:
      - repository
      security:
        - bearerAuth: ['']
      description: ''
      parameters:
      - name: repository_id
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Id"
      responses:
        '200':
          description: A JSON array of issues id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdList"
    post:
      summary: 3.2.5 新增版本號
      tags:
      - repository
      security:
        - bearerAuth: ['']
      description: 3.2.5 新增版本號 建立Tag
      parameters:
      - name: repository_id
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Id"
      requestBody:
        description: 建立Tags
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                schemas:
                  $ref: "#/components/schemas/UploadTag"
      responses:
        '200':
          description: A JSON array of issues id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tag"
  /repositories/rd/{repository_id}/tags/{tag_name}:
    description: '3.2.10 刪除版本  '
    delete:
      summary: 3.2.10 刪除版本
      tags:
      - repository
      security:
        - bearerAuth: ['']
      description: 3.2.10 刪除版本
      parameters:
      - name: tag_name
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/TagName"
      - name: repository_id
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Id"
      responses:
        '200':
          description: A JSON array of issues id
          content:
            text/plain:
              example: Success Delete Tag
    get:
      summary: 取得Tag
      description: 取得Tag
      tags:
      - repository
      security:
        - bearerAuth: ['']
      parameters:
      - name: tag_id
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Id"
      - name: repository_id
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tag"
      deprecated: true
  /repositories/rd/{repository_id}/branch:
    description: '3.2.1 分支列表  3.2.4 新增分支'
    get:
      summary: 3.2.1 分支列表 
      tags:
      - repository
      security:
        - bearerAuth: ['']
      description: '3.2.1 分支列表 '
      parameters:
      - name: repository_id
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Id"
      responses:
        '200':
          description: A JSON array of issues id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BranchList"
    post:
      summary:  3.2.4 新增分支
      tags:
      - repository
      security:
        - bearerAuth: ['']
      description: 3.2.4 新增分支
      parameters:
      - name: repository_id
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Id"
      requestBody:
        description: 建立Branch
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                branch:
                  type: string
                  description: Name of the branch.
                ref:
                  type: string
                  description: Branch name or commit SHA to create branch from.
              required:
              - branch
              - ref
      responses:
        '200':
          description: A JSON array of issues id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Branch"
  /repositories/rd/{repository_id}/branch/{branch_name}:
    description: '3.2.1.1檔案清單 3.2.9 刪除分支'
    delete:
      summary: 3.2.9 刪除分支
      tags:
      - repository
      security:
        - bearerAuth: ['']
      description: 刪除分支
      parameters:
      - name: branch_name
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Id"
      - name: repository_id
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Id"
      responses:
        '200':
          description: A JSON array of issues id
          content:
            text/plain:
              example: Success Delete Branch
    get:
      summary: 3.2.1.1檔案清單
      description: 3.2.1.1檔案清單
      tags:
      - repository
      security:
        - bearerAuth: ['']
      parameters:
      - name: branch_name
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/BranchName"
      - name: repository_id
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Branch"
  /repositories/rd/{repository_id}/branch/{branch_name}/deleteAllBranch:
    delete:
      summary: 刪除分支底下全部分支
      tags:
      - repository
      security:
        - bearerAuth: ['']
      description: 刪除分支底下全部分支
      parameters:
      - name: branch_name
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Id"
      - name: repository_id
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Id"
      responses:
        '200':
          description: A JSON array of issues id
          content:
            text/plain:
              example: Success Delete Branch
      deprecated: true
  /repositories/rd/{repository_id}/branch/{branch_name}/tree:
    description: '3.2.1.1 檔案清單'
    get:
      summary: 3.2.1.1 檔案清單
      tags:
      - repository
      security:
        - bearerAuth: ['']
      description: ''
      parameters:
      - name: branch_name
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Id"
      - name: repository_id
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Id"
      responses:
        '200':
          description: File System Tree
          content:
            application/json:
              schema:
                type: object
  /repositories/rd/{repository_id}/branch/{branch_name}/files/{file_path}:
    description: '3.2.1 分支編輯檔案  3.2.2.2 分支新增檔案  3.2.2 分支上傳檔案'
    get:
      summary: 取得檔案內容
      tags:
      - repository
      security:
        - bearerAuth: ['']
      description: ''
      parameters:
      - name: repository_id
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Id"
      - name: file_path
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/FilePath"
      - name: branch_name
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/BranchName"
      - name: commit_message 
        in: query
        required: true
        schema:
          type: string
          example: fix V1.0
      responses:
        '200':
          description: File System Tree
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:  
                    $ref: '#/components/schemas/SuccessMessage'
                  data:
                    $ref: "#/components/schemas/FileInfo"
        '400':
          $ref: '#/components/response/errorResponse'
    delete:
      summary: 刪除檔案內容
      tags:
      - repository
      security:
        - bearerAuth: ['']
      description: ''
      parameters:
      - name: repository_id
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Id"
      - name: file_path
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/FilePath"
      - name: branch_name
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/BranchName"
      responses:
        '200':
          description: A JSON array of issues id
          content:
            text/plain:
              example: Success Delete FI
        '400':
          $ref: '#/components/response/errorResponse'
    put:
      summary: 3.2.1 分支編輯檔案
      tags:
      - repository
      security:
        - bearerAuth: ['']
      description: 3.2.1 分支編輯檔案
      parameters:
      - name: repository_id
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateFile"
      responses:
        '200':
          description: File System Tree
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    $ref: '#/components/schemas/SuccessMessage'
                  data:
                    type: object
                    properties:
                      file_path:
                        type: string
                        example:
                          $ref: "#/components/schemas/FilePath"
                      branch_name:
                        type: string
                        example: master
        '400':
          $ref: '#/components/response/errorResponse'
  /repositories/rd/{repository_id}/branch/files:
    description: '3.2.1 分支編輯檔案 '
    post:
      summary: 3.2.2.2 分支新增檔案 3.2.2 分支上傳檔案
      tags:
      - repository
      security:
        - bearerAuth: ['']
      description: ''
      parameters:
      - name: repository_id
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UplodFile"
      responses:
        '200':
          description: File System Tree
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:  
                    $ref: '#/components/schemas/SuccessMessage'
                  data:
                    type: object
                    properties:
                      file_path:
                        $ref: "#/components/schemas/FilePath"
                      branch_name:
                        type: string
                        example: master
        '400':
          $ref: '#/components/response/errorResponse'
  /repositories/rd/{repository_id}/directory/{directory_path}:
    post:
      summary: '3.2.3 分支新增資料夾'
      tags:
      - repository
      security:
        - bearerAuth: ['']
      description: ''
      parameters:
      - name: repository_id
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Id"
      - name: directory_path
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/FilePath"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UploadDirectory"
      responses:
        '200':
          description: File System Tree
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    $ref : '#components/schemas/SuccessMessage'
                  data:
                    type: object
                    properties:
                      file_path:
                        $ref: "#/components/schemas/FilePath"
                      branch:
                        type: string
                        example: master
        '400':
          description: Non FIle
          content:
            text/plain:
              example: no file
    put:
      summary: 3.2.1 分支編輯檔案
      tags:
      - repository
      security:
        - bearerAuth: ['']
      description: 3.2.1 分支編輯檔案
      parameters:
      - name: repository_id
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Id"
      - name: directory_path
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/FilePath"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateFile"
      responses:
        '200':
          description: File System Tree
          content:
            application/json:
              schema:
                type: object
                properties:
                  file_path:
                    type: string
                    example:
                      $ref: "#/components/schemas/FilePath"
                  branch:
                    type: string
                    example: master
        '400':
          description: Non FIle
          content:
            text/plain:
              example: no file
    delete:
      summary: 刪除檔案內容
      tags:
      - repository
      security:
        - bearerAuth: ['']
      description: ''
      parameters:
      - name: repository_id
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Id"
      - name: directory_path
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/FilePath"
      - name: commit_message 
        in: query
        required: true
        schema:
          type: string
          example: fix V1.0
      responses:
        '200':
          description: A JSON array of issues id
          content:
            text/plain:
              example: Success Delete     
  /dashboard_issues_priority/rd/{user_account}:
    get:
      summary: 取得使用者儀錶板資訊(工作等級)
      tags:
      - DashBoard
      security:
        - bearerAuth: ['']
      description: Optional extended description in CommonMark or HTML.
      parameters:
      - name: user_account
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Id"
      responses:
        '200':
          description: A JSON array of Issues Information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IssuesPriorityNumber"
  /dashboard_issues_project/{user_account}:
    get:
      summary: 取得使用者儀錶板資訊(工作專案)
      tags:
      - DashBoard
      security:
        - bearerAuth: ['']
      description: Optional extended description in CommonMark or HTML.
      parameters:
      - name: user_account
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Id"
      responses:
        '200':
          description: A JSON array of Issues Information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IssuesProjectNumber"
  /dashboard_issues_type/{user_account}:
    get:
      summary: 取得使用者儀錶板資訊(工作專案)
      tags:
      - DashBoard
      security:
        - bearerAuth: ['']
      description: Optional extended description in CommonMark or HTML.
      parameters:
      - name: user_account
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/Id"
      responses:
        '200':
          description: A JSON array of Issues Information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IssuesTypeNumber"
components:
  schemas:
    Project:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          source:
            type: string
            description: Remdmin or GitLab
    Id:
      type: integer
      example: 1
    Ids:
      type: array
      items:
        type: integer
    ProjectList:
      type: array
      items:
        type: object
        properties:
          project_id:
            type: integer
            example: 1 
          name:
            type: string
            description: 專案名稱
          issues:
            type: integer
            description: 工作項目
          next_d_time:
            type: string
            format: date-time
            description: 最近交付期限
          branch:
            type: integer
            description: 分支數量
          last_test_time:
            type: string
            format: date-time
            description: 最近測試時間
          last_test_result:
            type: object
            properties:
              total:
                type: integer
                description: 總共測試數目
              success:
                type: integer
                description: 總共成功數目
          repository_ids:
            type: array
            items:
              $ref: '#/components/schemas/RepositoryId'
    IssuesList:
      type: object
      properties:
        id:
          type: integer
          description: 議題標號
          example: '7224'
        name:
          type: string
          description: 專案名稱
          example: 'IServCloud UI開發'
        issue_category:
          type: string
          description: 議題類型
          example: 'Bug'
        issue_priority:
          type: string
          description: 優先級別
          example: '特急'
        issue_status:
          type: string
          description: 議題狀態
          example: 進行中
        issue_name:
          type: string
          description: 議題名稱
          example: ServCloud 修改backend scheduler, 定期去檢查FT VM 到何運算節點，並把資訊更新到 nova DB
        last_test_time:
          type: string
          format: date-time
          description: 最近更新時間
        last_test_result:
          type: object
          description: 最近測試結果
          properties:
            total:
              type: integer
              description: 總共測試數目
            success:
              type: integer
              description: 總共成功數目
    AddIssue:
      type: object
      properties:
        project_id:
          type: integer
        'subject:':
          type: string
        tracker_id:
          type: integer
    IssuesTrackers:
      type: array
      items:
        type: object
        properties:
          tracker_id:
            type: integer
          name:
            type: string
            description: 類別名稱
    IssuesPriority:
      type: object
      properties:
        priority_id:
          type: integer
        name:
          description: 優先級別名稱
          type: string
        is_closed:
          description: 是否停用
          type: boolean
    IssuesStatus:
      type: object
      properties:
        status_id:
          type: integer
          example: 1
        name:
          type: string
          example: '已被分配'
        is_closed:
          type: boolean
          example: false
    IssuesPriorityNumber:
      type: array
      items:
        type: object
        properties:
          name:
            description: 優先級別名稱
            type: string
          number:
            description: 數目
            type: integer
    IssuesProjectNumber:
      type: array
      items:
        type: object
        properties:
          name:
            description: 專案名稱
            type: string
          number:
            description: 數目
            type: integer
    IssuesTypeNumber:
      type: array
      items:
        type: object
        properties:
          name:
            description: 議題類型
            type: string
          number:
            description: 數目
            type: integer
    User:
      type: object
      properties:
        id:
          type: integer
          description: User Key
        name:
          type: string
          description: 使用者姓名
          example:
        username:
          type: string
          description: 使用者帳號
        password:
          type: string
          format: password
          description: 密碼
        email:
          type: string
          description: 使用者電子郵件信箱
          example: johndoe@example.com
        phone:
          type: string 
          description: 使用者電話
          example: 0933333666
        created_at:
          type: string
          format: date-time
          description: 建立時間
        updated_at:
          type: string
          format: date-time
          description: 更新時間
        group:
          type: object
          properties:
            name:
              type: string
              description: 群組名稱
        role:
          type: object
          properties:
            nname:
              type: string
              description: 角色名稱
    UpdateUser:
      type: object
      properties:
        name:
          type: string
          description: 使用者姓名
        password:
          type: string
          format: password
          description: 密碼
        phone:
          type: string 
          description: 使用者電話
          example: 0933333666
        email:
          type: string
          description: 使用者電子郵件信箱
        group:
          type: object
          properties:
            name:
              type: string
              description: 群組名稱
        role:
          type: object
          properties:
            nname:
              type: string
              description: 角色名稱
    UserInfo:
      type: object
      properties:
        name:
          type: string
          description: 使用者姓名
        email:
          type: string
          description: 使用者電子郵件信箱
        phone:
          type: string 
          description: 使用者電話
          example: 0933333666
        group:
          type: object
          properties:
            name:
              type: string
              description: 群組名稱
        role:
          type: object
          properties:
            nname:
              type: string
              description: 角色名稱
    Issues:
      type: object
      properties:
        id:
          type: integer
        project:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        tracker:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        status:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        priority:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        category:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string

        author:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        parent_id:
          type: integer
        subject:
          type: string
        start_date:
          type: string
        done_ratio:
          type: integer
        custom_fields:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              value:
                type: string
    IssueInfo:
      type: object
      properties:
        id:
          type: integer
        project:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        tracker:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        status:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        priority:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        description: 
          type: string
          example: 'iServCloud 修改backend scheduler, 定期去檢查FT VM 到何運算節點，並把資訊更新到 nova DB'
        author:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        parent_id:
          type: integer
        subject:
          type: string
        start_date:
          type: string
          format: date-time
        due_date:
          type: string
          format: date-time
        done_ratio:
          type: integer
        created_date:
          type: string
          format: date-time
        updated_date:
          type: string
          format: date-time   
        custom_fields:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              value:
                type: string
              create_time:
                type: string
                format: date-time
        repository_ids:
          type: array 
          description: Devops ProjectId mapping to GitLab Id
          items:
            $ref: '#/components/schemas/RepositoryId'

    UploadIssue:
      type: object
      properties:
        tracker:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        status:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        priority:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        description: 
          type: string
          example: 'iServCloud 修改backend scheduler, 定期去檢查FT VM 到何運算節點，並把資訊更新到 nova DB'
        author:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        parent_id:
          type: integer
        subject:
          type: string
        start_date:
          type: string
          format: date-time
        due_date:
          type: string
          format: date-time
        done_ratio:
          type: integer
        custom_fields:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              value:
                type: string
              update_time:
                type: string
                format: date-time    
    RDUpdateIssue:
      type: object
      properties:
        tracker_id:
            type: integer
        status_id:
            type: integer
        priority_id:
            type: integer
        description: 
          type: string
          example: 'iServCloud 修改backend scheduler, 定期去檢查FT VM 到何運算節點，並把資訊更新到 nova DB'
        parent_id:
          type: integer
        subject:
          type: string
        start_date:
          type: string
          format: date-time
        due_date:
          type: string
          format: date-time
        done_ratio:
          type: integer
        notes:
          type: string
    Function:
      type: object
      description: 依據議題所設計的功能
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        function_type:
          type: string
        isssues_id:
          type: integer
        parameters:
          type: array
          description: 功能內參數
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              description:
                type: string
    FuntcionList:
      type: object
      description: 議題所設計功能列表
      properties:
        id:
          type: integer
        name:
          type: string
        URL:
          type: string
        description:
          type: string
        last_commit_time:
          type: string
          format: date-time
    Parameters:
      type: object
      description: 參數
      properties:
        id:
          type: integer
        name:
          type: string
        is_defined:
          type: boolean
        description:
          type: string
        type:
          type: string
          description: 參數類別
        length:
          type: integer
        limit:
          type: string
          description: 正規表達式的限制
        values:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              value:
                type: string
              is_check:
                type: boolean
    CaseList:
      type: object
      description: 測試案例(API)列表
      properties:
        id:
          type: integer
        name:
          type: string
          description: 測試名稱
        description:
          type: string
          description: 測試說明
        last_updated_time:
          type: string
          format: date-time
          description: 最後更新時間
        create_time:
          type: string
          format: date-time
          description: 建立時間
        last_test_result:
          type: object
          properties:
            total:
              type: integer
              description: 總共測試數目
            success:
              type: integer
              description: 總共成功數目
    Case:
      type: object
      description: 測試案例(API)
      properties:
        id:
          type: integer
        name:
          type: string
          description: 測試名稱
        description:
          type: string
          description: 測試說明
        last_updated_time:
          type: string
          format: date-time
          description: 最後更新時間
        action_ids:
          type: array
          items:
            type: object
            $ref: "#/components/schemas/Action"
    Action:
      type: object
      description: 測試動作
      properties:
        id:
          type: integer
        action_type:
          type: string
        parameters_is_defined:
          type: boolean
        parameters_id:
          type: array
          items:
            type: integer
        parameters:
          type: array
          items:
            type: string
    RepositoryId:
      type: integer
      description: DevOps Plattform ID mapping GitLab Repository Ids
      example: 1 
    RepositorySourceTree:
      type: object
      description: GitLab Repository
      properties:
        branch:
          type: string
          example: master
        commit_time:
          type: string
          format: date-time
        commit_message:
          type: string
          example: fix issue 4
        tag:
          type: string
          example: V1.0.1
    Tag:
      type: object
      description: 分支內容
      properties:
        name:
          type: string
        merged:
          type: boolean
          example: false
        protected:
          type: boolean
          example: true
        default:
          type: boolean
          example: true
        developers_can_push:
          type: boolean
          example: false
        developers_can_merge:
          type: boolean
          example: false
        can_push:
          type: boolean
          example: true
        web_url:
          type: string
          example: http://gitlab.example.com/my-group/my-project/-/tree/master
        commit:
          allOf:
          - $ref: "#/components/schemas/Commit"
    TagList:
      type: array
      description: 版本清單
      items:
        type: object
        description: 版本內容
        properties:
          id:
            type: integer
          name:
            type: string
            description: tag name
          last_commit_message:
            type: string
            description: commit message
          last_commit_time:
            type: string
            format: date-time
            description: 最新一次測試時間
          uuid:
            type: string
    TagName:
      type: string 
      example: V1.0
    UploadTag:
      type: object
      required:
      - tag_name
      - ref
      properties:
        tag_name:
          type: string
          example: test
        ref:
          type: string
          example: master
          description: " Create tag using commit SHA, another tag name, or branch
            name."
        message:
          type: string
          example: annotated
          description: Creates annotated tag
    BranchName:
      type: string
      example: api_yaml
    BranchList:
      type: array
      description: 分支清單
      items:
        type: object
        description: 分支內容
        properties:
          id:
            type: integer
          name:
            type: string
            description: tag name
          last_commit_message:
            type: string
            description: commit message
          last_commit_time:
            type: string
            format: date-time
            description: 最新一次測試時間
          uuid:
            type: string
    Branch:
      type: object
      description: 分支內容
      properties:
        name:
          type: string
        merged:
          type: boolean
          example: false
        protected:
          type: boolean
          example: true
        default:
          type: boolean
          example: true
        developers_can_push:
          type: boolean
          example: false
        developers_can_merge:
          type: boolean
          example: false
        can_push:
          type: boolean
          example: true
        web_url:
          type: string
          example: http://gitlab.example.com/my-group/my-project/-/tree/master
        commit:
          allOf:
          - $ref: "#/components/schemas/Commit"
    Commit:
      type: object
      properties:
        id:
          type: string
          example: ed899a2f4b50b4370feeea94676502b42383c746
        short_id:
          type: string
          example: ed899a2f4b5
        title:
          type: string
          example: Replace sanitize with escape once
        author_name:
          type: string
          example: Example User
        author_email:
          type: string
          format: email
          example: user@example.com
        authored_date:
          type: string
          format: date-time
          example: '2012-09-20T11:50:22+03:00'
        committer_name:
          type: string
          example: Administrator
        committer_email:
          type: string
          format: email
          example: admin@example.com
        committed_date:
          type: string
          format: date-time
          example: '2012-09-20T11:50:22+03:00'
        created_at:
          type: string
          format: date-time
          example: '2012-09-20T11:50:22+03:00'
        message:
          type: string
          example: Replace sanitize with escape once
        parent_ids:
          type: array
          items:
            type: string
            description: commit id
    PipelineSoftware:
      type: object
      description: Support PIpeline Software
      properties:
        pipeline_info:
          type: array
          items:
            allOf:
            - $ref: "#/components/schemas/Software"
    PipielineYamlInfo:
      type: array
      description: YamlFileInfo
      properties:
        
    

    PipelinesExecInfo:
      type: object
      description: Pipeline log list
      properties:
        id:
          type: integer
        status:
          allOf:
          - $ref: "#/components/schemas/TestResultSummary"
        pipeline_id:
          type: string
        commit_message:
          type: string
        commit_branch:
          type: string
        last_test_time:
          type: string
          format: date-time
    PipeLinesExecLog:
      type: array
      items:
        type: string
        description: log output string
    
    #PipelineSoftware:
    # type: object
    #  properties:

    Software:
      type: object
      description: Integeration Thrid Partiy Software
      properties:
        id:
          type: integer
        software_name:
          type: string
          example: "flask"
        phase_name:
          type: string
          example: "Deploy"
        detail:
          type: object
          description:  Yaml Example 
          properties:
            name: 
              type: string
              example: 'deploy flask-${CICD_GIT_BRANCH} environment'
            steps:
              type: array
              items:
                type: string
                example: 
                  - {"applyYamlConfig": {"path": "./sample/flask/k8s-yaml/flask-deployment.yaml"}}
                  - {"applyYamlConfig": {"path": "./sample/flask/k8s-yaml/flask-service.yaml"}}                
        is_closed:
          type: boolean
          description: 是否啟用
    TestResultSummary:
      type: object
      properties:
        total:
          type: integer
          description: 總共測試數目
        success:
          type: integer
          description: 總共成功數目
    ProjectId:
      type: string
    FilePath:
      type: string
      format: urlencoded
      example: app%2Fmodels%2Fkey%2Erb
    FileInfo:
      type: object
      properties:
        file_name:
          type: string
          example: key.rb
        file_path:
          type: string
          example: app/models/key.rb
        size":
          type: integer
          example: 1476
        encoding:
          type: string
          example: base64
        content:
          type: string
          example: IyA9PSBTY2hlbWEgSW5mb3...
        content_sha256:
          type: string
          example: 4c294617b60715c1d218e61164a3abd4808a4284cbc30e6728a01ad9aada4481
        ref":
          type: string
          example: master
        last_commit_id:
          type: string
          example: 570e7b2abdd848b95f2f578043fc23bd6f6fd24d
    UplodFile:
      type: object
      required:
      - content
      - commit_message
      properties:
        branch:
          type: string
          example: master
        file_path:
          type: string
          format: urlencoded
          example: app/models/key.rb
        start_branch:
          type: string
          example: master
        author_email:
          type: string
          example: author@example.com
        author_name:
          type: string
          example: John Doe
        encoding":
          type: string
          example: base64
        content":
          type: string
          example: IyA9PSBTY2hlbWEgSW5mb3...
        commit_message:
          type: string
          example: create a new file
    UpdateFileResponse:
      type: object
      required:
      - file_path
      - branch_name
      properties:
        file_path:
          $ref: '#/components/schemas/FilePath'
        branch_name:
          $ref: '#/components/schemas/BranchName'
    UpdateFile:
      type: object
      required:
      - content
      - commit_message
      properties:
        name:
          type: string
        branch:
          type: string
          example: master
        author_email:
          type: string
          example: author@example.com
        author_name:
          type: string
          example: John Doe
        encoding":
          type: string
          example: base64
        content":
          type: string
          example: IyA9PSBTY2hlbWEgSW5mb3...
        commit_message:
          type: string
          example: create a new file
    DeleteFile:
      type: object
      required:
      - file_path
      - commit_message
      properties:
        file_path:
          type: string
          example: app/models/key.rb
        branch:
          type: string
          example: master
        start_branch:
          type: string
          example: master
        author_email:
          type: string
          example: author@example.com
        author_name:
          type: string
          example: John Doe
        commit_message:
          type: string
          example: create a new file
    NewGitProject:
      type: object
      required:
      - name
      properties:
        name:
          type: string
          example: app/models/key.rb
        visibility:
          type: string
          example: 'public'
        description:
          type: string
          example: 
            'Projcet Backend Service'
    MergeBranchs:
      type: object
      required:
      - source_branch
      - target_branch
      properties:
        source_branch:
          type: string
          example: test1
        target_branch:
          type: string
          example: master
        title:
          type: string
          example: API
        merge_commit_message:
          type: string
          example: Merge to Master

    UploadDirectory:
      type: object
      properties:
        branch:
          type: string
          example: master
        commit_message:
          type: string
          example: first version
    SuccessMessage:
      type: string
      example: success
    ErrorMessage:
      description: Unexpected Error
      type: object
      properties:
        message:
          type: string
          example: Failue reason
    JWTToken:
      type: object
      properties:
        token:
          type: string
          example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE1OTM0ODM1MDQsIm5iZiI6MTU5MzQ4MzUwNCwianRpIjoiNjlkMWFkNWQtMGY3ZC00ZDI3LThhMmUtZGNkOTNmZDA0MDAzIiwiZXhwIjoxNTkzNTY5OTA0LCJpZGVudGl0eSI6MiwiZnJlc2giOmZhbHNlLCJ0eXBlIjoiYWNjZXNzIn0.w8OfaIxDMpapedp5Mkkk9jCh_FCUpo7c_AUCQa2vVac
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
    InvalidInput:
      description: 'Invalid input'
    successResponse:
      description: "request sucessful"   
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SuccessMessage'         
    errorResponse:
      description: Unexpect operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'   
  parameters:
    user_id:
      name: user_id
      in: path
      required: true
      description: User PK
      schema:
        $ref: "#/components/schemas/Id" 
    issue_id:
      name: issue_id
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/Id"





