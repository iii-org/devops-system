{
	"info": {
		"_postman_id": "4576d583-79d3-4edf-b196-f308096d81dd",
		"name": "設定子議題_modify0203",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "13178265"
	},
	"item": [
		{
			"name": "Add user",
			"item": [
				{
					"name": "AM登入",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"function jwt_decode(jwt) {",
									"    var parts = jwt.split('.'); // header, payload, signature",
									"    return JSON.parse(atob(parts[1]));",
									"}",
									"",
									"pm.test(\"JWT Token 檢查\", function () {",
									"    const decode_jwt = jwt_decode(pm.response.json().data.token);",
									"    pm.variables.set(\"user_id_am\", decode_jwt.sub.user_id)",
									"    pm.variables.set(\"token_am\", pm.response.json().data.token)",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "{{username_am}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{password_am}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{test_origin}}/user/login",
							"host": [
								"{{test_origin}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": [
						{
							"name": "使用者登入",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"{{username}}\",\n    \"password\": \"{{password}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server_origin}}/user/login",
									"host": [
										"{{server_origin}}"
									],
									"path": [
										"user",
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "450"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Server",
									"value": "Werkzeug/1.0.1 Python/3.8.6"
								},
								{
									"key": "Date",
									"value": "Wed, 21 Oct 2020 05:08:20 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"success\",\n    \"data\": {\n        \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE2MDMyNTY5MDAsIm5iZiI6MTYwMzI1NjkwMCwianRpIjoiYmUxNjg1MmMtYTFiNC00YjczLTllMTctMjFiNTc1MDljMmFjIiwiZXhwIjoxNjAzMzQzMzAwLCJpZGVudGl0eSI6eyJ1c2VyX2lkIjoyNTYsInVzZXJfYWNjb3VudCI6InJvbXVsdXNfcG0iLCJyb2xlX2lkIjozLCJyb2xlX25hbWUiOiJQcm9qZWN0IE1hbmFnZXIifSwiZnJlc2giOmZhbHNlLCJ0eXBlIjoiYWNjZXNzIn0.3V8TP6zGOXgz5tp4RxftvWyj1tK_r86AnWKbCPUSRX0\"\n    }\n}"
						}
					]
				},
				{
					"name": "取得可使用角色列表",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token_am}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{test_origin}}/user/role/list",
							"host": [
								"{{test_origin}}"
							],
							"path": [
								"user",
								"role",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "取得所有使用者列表",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token_am}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{test_origin}}/user/list",
							"host": [
								"{{test_origin}}"
							],
							"path": [
								"user",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "新增 PM 用戶",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"儲存新 user ID\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.user_id).to.be.a(\"number\");\r",
									"    pm.environment.set(\"am_test.user_id.pm\", pm.response.json().data.user_id)\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token_am}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{am_test.username.pm}}\",\n    \"email\": \"amTestUserPM2023@yahoo.com.tw\",\n    \"password\": \"{{am_test.password}}\",\n    \"login\": \"{{am_test.username.pm}}\",\n    \"role_id\": 3\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{test_origin}}/user",
							"host": [
								"{{test_origin}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "新增 RD 用戶",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"儲存新 user ID\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.user_id).to.be.a(\"number\");\r",
									"    pm.environment.set(\"am_test.user_id.rd\", pm.response.json().data.user_id)\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token_am}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{am_test.username.rd}}\",\n    \"email\": \"amTestUserRD@yahoo.com.tw\",\n    \"password\": \"{{password_rd}}\",\n    \"login\": \"{{am_test.username.rd}}\",\n    \"role_id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{test_origin}}/user",
							"host": [
								"{{test_origin}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "編輯使用者",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set('pm.new.phone',\"0999999999\")",
									"pm.environment.set('pm.new.name',\"upamtestusernamepm\")",
									"pm.environment.set('pm.new.email',\"pm2023@yahoo.nowhere\")",
									"pm.environment.set('pm.new.status',\"enable\")"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token_am}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"upamtestusernamepm\",\n    \"old_password\": \"{{am_test.password}}\",\n    \"password\": \"{{password_pm}}\",\n    \"phone\": \"0999999999\",\n    \"email\": \"pm2023@yahoo.nowhere\",\n    \"status\": \"enable\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{test_origin}}/user/{{am_test.user_id.pm}}",
							"host": [
								"{{test_origin}}"
							],
							"path": [
								"user",
								"{{am_test.user_id.pm}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "取得編輯後的使用者資訊",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"比對編輯後的user\", function () {",
									"    const pmUserInfo = pm.response.json();",
									"    pm.expect(pmUserInfo.data.name).to.eql(pm.environment.get(\"pm.new.name\"));",
									"    pm.expect(pmUserInfo.data.phone).to.eql(pm.environment.get(\"pm.new.phone\"));",
									"    pm.expect(pmUserInfo.data.email).to.eql(pm.environment.get(\"pm.new.email\"));",
									"    pm.expect(pmUserInfo.data.status).to.eql(pm.environment.get(\"pm.new.status\"));",
									"    pm.expect(pmUserInfo.data.default_role.id).to.eql(3)",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token_am}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{test_origin}}/user/{{am_test.user_id.pm}}",
							"host": [
								"{{test_origin}}"
							],
							"path": [
								"user",
								"{{am_test.user_id.pm}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "全員登入",
			"item": [
				{
					"name": "PM登入",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"function jwt_decode(jwt) {",
									"    var parts = jwt.split('.'); // header, payload, signature",
									"    return JSON.parse(atob(parts[1]));",
									"}",
									"",
									"pm.test(\"JWT Token 檢查\", function () {",
									"    const decode_jwt = jwt_decode(pm.response.json().data.token);",
									"    pm.variables.set(\"user_id_pm\", decode_jwt.sub.user_id)",
									"    pm.variables.set(\"token_pm\", pm.response.json().data.token)",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "{{am_test.username.pm}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{password_pm}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{test_origin}}/user/login",
							"host": [
								"{{test_origin}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": [
						{
							"name": "使用者登入",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"{{username}}\",\n    \"password\": \"{{password}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server_origin}}/user/login",
									"host": [
										"{{server_origin}}"
									],
									"path": [
										"user",
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "450"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Server",
									"value": "Werkzeug/1.0.1 Python/3.8.6"
								},
								{
									"key": "Date",
									"value": "Wed, 21 Oct 2020 05:08:20 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"success\",\n    \"data\": {\n        \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE2MDMyNTY5MDAsIm5iZiI6MTYwMzI1NjkwMCwianRpIjoiYmUxNjg1MmMtYTFiNC00YjczLTllMTctMjFiNTc1MDljMmFjIiwiZXhwIjoxNjAzMzQzMzAwLCJpZGVudGl0eSI6eyJ1c2VyX2lkIjoyNTYsInVzZXJfYWNjb3VudCI6InJvbXVsdXNfcG0iLCJyb2xlX2lkIjozLCJyb2xlX25hbWUiOiJQcm9qZWN0IE1hbmFnZXIifSwiZnJlc2giOmZhbHNlLCJ0eXBlIjoiYWNjZXNzIn0.3V8TP6zGOXgz5tp4RxftvWyj1tK_r86AnWKbCPUSRX0\"\n    }\n}"
						}
					]
				},
				{
					"name": "RD登入",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"function jwt_decode(jwt) {",
									"    var parts = jwt.split('.'); // header, payload, signature",
									"    return JSON.parse(atob(parts[1]));",
									"}",
									"",
									"pm.test(\"JWT Token 檢查\", function () {",
									"    const decode_jwt = jwt_decode(pm.response.json().data.token);",
									"    pm.variables.set(\"user_id_rd\", decode_jwt.sub.user_id)",
									"    pm.variables.set(\"token_rd\", pm.response.json().data.token)",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"host": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "{{am_test.username.rd}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{password_rd}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{test_origin}}/user/login",
							"host": [
								"{{test_origin}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": [
						{
							"name": "使用者登入",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"{{username}}\",\n    \"password\": \"{{password}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server_origin}}/user/login",
									"host": [
										"{{server_origin}}"
									],
									"path": [
										"user",
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "450"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Server",
									"value": "Werkzeug/1.0.1 Python/3.8.6"
								},
								{
									"key": "Date",
									"value": "Wed, 21 Oct 2020 05:08:20 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"success\",\n    \"data\": {\n        \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE2MDMyNTY5MDAsIm5iZiI6MTYwMzI1NjkwMCwianRpIjoiYmUxNjg1MmMtYTFiNC00YjczLTllMTctMjFiNTc1MDljMmFjIiwiZXhwIjoxNjAzMzQzMzAwLCJpZGVudGl0eSI6eyJ1c2VyX2lkIjoyNTYsInVzZXJfYWNjb3VudCI6InJvbXVsdXNfcG0iLCJyb2xlX2lkIjozLCJyb2xlX25hbWUiOiJQcm9qZWN0IE1hbmFnZXIifSwiZnJlc2giOmZhbHNlLCJ0eXBlIjoiYWNjZXNzIn0.3V8TP6zGOXgz5tp4RxftvWyj1tK_r86AnWKbCPUSRX0\"\n    }\n}"
						}
					]
				}
			]
		},
		{
			"name": "設定子議題",
			"item": [
				{
					"name": "PM新增測試專案",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"儲存專案各項id\", function () {\r",
									"    const data = pm.response.json().data;\r",
									"    pm.variables.set(\"test_project_id\", data.project_id)\r",
									"    console.log(pm.environment.get(\"test_project_id\"))\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const now = new Date()\r",
									"now.setTime(now.getTime() + (8 * 60 * 60 * 1000)); // Shift to GMT+8\r",
									"const project_name = \"pmgen-\" + now.getTime()\r",
									"const desc = \"此為 Postman 測試腳本自動產生專案。序號：\" + now.getTime()\r",
									"const date = now.toISOString()\r",
									"const display = \"PMSC \" + date.slice(date.indexOf('-') + 1, date.indexOf('.') - 3).replace('T', ' ')\r",
									"pm.variables.set('am_create_pj_name', project_name)\r",
									"pm.variables.set('am_create_pj_descripiton', desc)\r",
									"pm.variables.set('am_create_pj_display', display)\r",
									"\r",
									"var year = now.getFullYear();\r",
									"var month = now.getMonth();\r",
									"var day = now.getDate();\r",
									"var c = new Date(year + 1, month, day);\r",
									"pm.variables.set('start_date',date)\r",
									"pm.variables.set('due_date',c.toISOString())\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token_pm}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{new.project_name}}\",\n\t\"description\": \"{{new.project_descripiton}}\",\n    \"display\": \"{{new.project_display}}\",\n    \"start_date\": \"{{start_date}}\",\n    \"due_date\": \"{{due_date}}\",\n    \"disabled\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{test_origin}}/project",
							"host": [
								"{{test_origin}}"
							],
							"path": [
								"project"
							]
						}
					},
					"response": []
				},
				{
					"name": "加入RD專案成員",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true,
							"accept-encoding": true,
							"connection": true,
							"host": true,
							"user-agent": true
						},
						"strictSSL": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token_pm}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"user_id\": {{user_id_rd}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{test_origin}}/project/{{test_project_id}}/member",
							"host": [
								"{{test_origin}}"
							],
							"path": [
								"project",
								"{{test_project_id}}",
								"member"
							]
						},
						"description": "/project/<project_id>/member"
					},
					"response": [
						{
							"name": "建立專案內成員",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"user_id\": {{pre_assigned_user_id}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{test_origin}}/project/{{project_id}}/member",
									"host": [
										"{{test_origin}}"
									],
									"path": [
										"project",
										"{{project_id}}",
										"member"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "29"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Server",
									"value": "Werkzeug/1.0.1 Python/3.8.6"
								},
								{
									"key": "Date",
									"value": "Mon, 26 Oct 2020 09:03:58 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"success\"\n}"
						}
					]
				},
				{
					"name": "PM建立測試用父議題",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"儲存議題 ID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data).to.have.property('id');\r",
									"    pm.environment.set('pm_parent_issue_id',jsonData.data.id)\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token_pm}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "project_id",
									"value": "{{test_project_id}}",
									"type": "text"
								},
								{
									"key": "tracker_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "status_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "priority_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "name",
									"value": "測試用議題",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{test_origin}}/issues",
							"host": [
								"{{test_origin}}"
							],
							"path": [
								"issues"
							]
						},
						"description": "只有 PM 和 Admin 可以新增議題，parent_id 若無可以不用放"
					},
					"response": []
				},
				{
					"name": "PM建立測試用子議題",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"儲存議題 ID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data).to.have.property('id');\r",
									"    pm.environment.set('pm_sub_issue_id',jsonData.data.id)\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token_pm}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "project_id",
									"value": "{{test_project_id}}",
									"type": "text"
								},
								{
									"key": "tracker_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "status_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "priority_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "name",
									"value": "測試用議題",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{test_origin}}/issues",
							"host": [
								"{{test_origin}}"
							],
							"path": [
								"issues"
							]
						},
						"description": "只有 PM 和 Admin 可以新增議題，parent_id 若無可以不用放"
					},
					"response": []
				},
				{
					"name": "RD建立測試用子議題",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"儲存議題 ID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data).to.have.property('id');\r",
									"    pm.environment.set('rd_sub_issue_id',jsonData.data.id)\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token_rd}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "project_id",
									"value": "{{test_project_id}}",
									"type": "text"
								},
								{
									"key": "tracker_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "status_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "priority_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "name",
									"value": "測試用議題",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{test_origin}}/issues",
							"host": [
								"{{test_origin}}"
							],
							"path": [
								"issues"
							]
						},
						"description": "只有 PM 和 Admin 可以新增議題，parent_id 若無可以不用放"
					},
					"response": []
				},
				{
					"name": "PM確認該議題是否存在",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token_pm}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{test_origin}}/v2/issues/{{pm_parent_issue_id}}",
							"host": [
								"{{test_origin}}"
							],
							"path": [
								"v2",
								"issues",
								"{{pm_parent_issue_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PM確認子議題是否存在",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token_pm}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{test_origin}}/v2/issues/{{pm_sub_issue_id}}",
							"host": [
								"{{test_origin}}"
							],
							"path": [
								"v2",
								"issues",
								"{{pm_sub_issue_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PM設定子議題",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token_pm}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "parent_id",
									"value": "{{pm_parent_issue_id}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{test_origin}}/issues/{{pm_sub_issue_id}}",
							"host": [
								"{{test_origin}}"
							],
							"path": [
								"issues",
								"{{pm_sub_issue_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "RD確認子議題是否存在",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token_pm}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{test_origin}}/v2/issues/{{rd_sub_issue_id}}",
							"host": [
								"{{test_origin}}"
							],
							"path": [
								"v2",
								"issues",
								"{{rd_sub_issue_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "RD設定子議題",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token_rd}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "parent_id",
									"value": "{{pm_parent_issue_id}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{test_origin}}/issues/{{rd_sub_issue_id}}",
							"host": [
								"{{test_origin}}"
							],
							"path": [
								"issues",
								"{{rd_sub_issue_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PM刪除專案",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token_pm}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{test_origin}}/project/{{test_project_id}}",
							"host": [
								"{{test_origin}}"
							],
							"path": [
								"project",
								"{{test_project_id}}"
							]
						},
						"description": "只有 Admin 和在指定專案內的 PM 可以刪除專案"
					},
					"response": []
				}
			]
		},
		{
			"name": "delete user",
			"item": [
				{
					"name": "刪除 RD 用戶",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token_am}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{test_origin}}/user/{{am_test.user_id.rd}}",
							"host": [
								"{{test_origin}}"
							],
							"path": [
								"user",
								"{{am_test.user_id.rd}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "刪除 PM 用戶",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token_am}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{test_origin}}/user/{{am_test.user_id.pm}}",
							"host": [
								"{{test_origin}}"
							],
							"path": [
								"user",
								"{{am_test.user_id.pm}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"correctStatus = pm.variables.get('correctStatus') || 200",
					"pm.test(\"Status code 檢查\", () => {",
					"    pm.response.to.have.status(correctStatus);",
					"});"
				]
			}
		}
	]
}